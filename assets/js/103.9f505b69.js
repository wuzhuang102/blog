(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{353:function(t,s,a){"use strict";a.r(s);var _=a(28),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网络-安全-专题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络-安全-专题"}},[t._v("#")]),t._v(" 网络/安全 专题")]),t._v(" "),a("h2",{attrs:{id:"_1-tcp-udp-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-udp-区别"}},[t._v("#")]),t._v(" 1. TCP/UDP 区别")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("区别")])])]),t._v(" "),a("ol",[a("li",[t._v("TCP 面向连接；UDP 是无连接的，发送数据之前不需要建立连接")]),t._v(" "),a("li",[t._v("TCP 提供可靠的服务；UDP 尽力交付，但不保证可靠")]),t._v(" "),a("li",[t._v("TCP 面向字节流；UDP 面向报文的，且没有拥塞控制")]),t._v(" "),a("li",[t._v("TCP 是点对点的；UDP 可以多对多")]),t._v(" "),a("li",[t._v("TCP 开销比较大，首部有 20 字节，UDP 首部只有 8 字节")]),t._v(" "),a("li",[t._v("TCP 是可靠的全双工通道；UDP 是不可靠的")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("TCP 怎样保证数据的正确性")]),t._v(" "),a("ul",[a("li",[t._v("校验和：发送数据报的二进制相加然后取反，检测数据在传输过程中有没有被修改")]),t._v(" "),a("li",[t._v("确认应答 + 序列号：TCP 的每个包都是有编号的，接收方会进行排序")]),t._v(" "),a("li",[t._v("超时重传")]),t._v(" "),a("li",[t._v("拥塞控制")]),t._v(" "),a("li",[t._v("流量控制：固定的缓冲大小，接收方来不及处理发送方的数据的时候，会提示发送方降低发送速率，防止丢包")])])])]),t._v(" "),a("ul",[a("li",[t._v("基于 TCP 的协议\n"),a("ul",[a("li",[t._v("HTTP、FTP、SSH、SMTP")])])]),t._v(" "),a("li",[t._v("基于 UDP 的协议\n"),a("ul",[a("li",[t._v("DNS、TFTP、NTP")])])])]),t._v(" "),a("p",[t._v("使用场景")]),t._v(" "),a("ul",[a("li",[t._v("UDP 适用于网络负担重、反映速度快、多为短消息、安全没有过多要求、多 client 的场景")])]),t._v(" "),a("h2",{attrs:{id:"_2-dns-解析的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-dns-解析的过程"}},[t._v("#")]),t._v(" 2. DNS 解析的过程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器检测自身缓存中有没有被解析过的这个域名对应的 ip 地址，有则结束，没有继续下一步")]),t._v(" "),a("li",[t._v("浏览器 DNS 缓存未命中，浏览器检测操作系统缓存中有没有对应的已解析过的结果")]),t._v(" "),a("li",[t._v("仍未命中，请求本地域名服务器（LDNS）解析这个域名。（这个服务器不会距离我们很远，大约 80%的域名解析到这就完成了）")]),t._v(" "),a("li",[t._v("如果 LDNS 仍未命中，直接跳到 Root Server 域名服务器请求解析")]),t._v(" "),a("li",[t._v("Root Server 返回给 LDNS 一个所查询域的主域名服务器（gTLD Server，国际顶尖域名服务器，如 "),a("code",[t._v(".com")]),t._v(","),a("code",[t._v(".cn")]),t._v("）")]),t._v(" "),a("li",[t._v("此时 LDNS 再发送请求给上一步返回的 gTLD")]),t._v(" "),a("li",[t._v("接受请求的 gTLD 查找并返回这个域名对应的 Name Server 的地址（就是网站注册的域名服务器）")]),t._v(" "),a("li",[t._v("Name Server 根据映射关系表找到目标 ip，返回给 LDNS")]),t._v(" "),a("li",[t._v("LDNS 缓存这个域名对应的 ip")]),t._v(" "),a("li",[t._v("LDNS 把解析的结果返回给用户，用户根据 TTL 值缓存到本地系统中，至此结束\n"),a("img",{staticClass:"zoom-img",attrs:{src:"/interview/dns.png"}})])]),t._v(" "),a("h2",{attrs:{id:"_3-cdn-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-cdn-原理"}},[t._v("#")]),t._v(" 3. CDN 原理")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("域名解析方式")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("A 记录")]),t._v("：即 Adress 记录，可以把它理解为一种指向关系，（域名 www.bestwuzhuang.com -> 111.111.111.111）")]),t._v(" "),a("li",[a("strong",[t._v("cname 记录")]),t._v("：别名记录，多个域名都可指向同一个域名 （static.1234.com -> www.bestwuzhuang.com）")]),t._v(" "),a("li",[a("strong",[t._v("NS 记录")]),t._v("（Name Server）：指定负责记录域名的服务器")])])]),t._v(" "),a("li",[a("strong",[t._v("CDN 流程")]),t._v(" "),a("ul",[a("li",[t._v("将网站的内内容发布到最接近用户的网络边缘，使用户可以就取得所需的内容，解决 Internet 网络拥塞状况，提高用户访问网站的响应速度")])])]),t._v(" "),a("li",[a("strong",[t._v("CDN 是怎么优化的")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("负载均衡")]),t._v("：CDN 负载均衡设备会为用户选择一台合适的缓存服务器提供服务")]),t._v(" "),a("li",[a("strong",[t._v("缓存")]),t._v("：缓存服务器响应用户请求")])])]),t._v(" "),a("li",[a("strong",[t._v("CDN 的好处")]),t._v(" "),a("ul",[a("li",[t._v("提升网页加载速度")]),t._v(" "),a("li",[t._v("处理高流量负载")]),t._v(" "),a("li",[t._v("减少带宽消耗")]),t._v(" "),a("li",[t._v("多台服务器均衡负载")]),t._v(" "),a("li",[t._v("使网站免于 DDos 攻击")])])])]),t._v(" "),a("h2",{attrs:{id:"_4-跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-跨域问题"}},[t._v("#")]),t._v(" 4. 跨域问题")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("解决方法")]),t._v(" "),a("ul",[a("li",[t._v("jsonp 跨域")]),t._v(" "),a("li",[t._v("跨域资源共享"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cors"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("代理 --- nginx、node")]),t._v(" "),a("li",[t._v("以下几种了解即可\n"),a("ul",[a("li",[a("code",[t._v("document.domain")]),t._v(" + "),a("code",[t._v("iframe")]),t._v(" 跨域：前提是两者的一级域名是相同的\n"),a("ul",[a("li",[a("code",[t._v("news.baidu.com(news.html)")]),t._v(" 中有一个 iframe "),a("code",[t._v("map.baidu.com(map.html)")]),t._v("，两者使用 "),a("code",[t._v("document.domain = 'baidu.com'")]),t._v(",两者就可以相互操作了")])])]),t._v(" "),a("li",[a("code",[t._v("location.hash")]),t._v(" + "),a("code",[t._v("iframe")])]),t._v(" "),a("li",[a("code",[t._v("window.name")]),t._v(" + "),a("code",[t._v("iframe")])]),t._v(" "),a("li",[a("code",[t._v("postMessage")])]),t._v(" "),a("li",[t._v("websocket")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_5-运营商劫持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-运营商劫持"}},[t._v("#")]),t._v(" 5. 运营商劫持")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("劫持方式")])]),t._v(" "),a("ul",[a("li",[t._v("DNS 劫持：这种劫持会把你重新定位到其它网站，我们所熟悉的钓鱼网站就是这个原理。但是因为它的违法性，现在被严厉的监管起来，已经很少见")]),t._v(" "),a("li",[t._v("HTTP 劫持：当运营商发现你的是 HTTP 请求时，就会在里面插入一些奇奇怪怪的广告")]),t._v(" "),a("li",[t._v("HTTPS 劫持：\n"),a("ul",[a("li",[t._v("伪造证书，通过病毒或者其他方式将伪造证书的根证书安装在用户系统中")]),t._v(" "),a("li",[t._v("代理有客户的证书与秘钥，或者与代理认证的时候不校验合法性")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("防劫持措施")])]),t._v(" "),a("ul",[a("li",[t._v("全站 HTTPS")]),t._v(" "),a("li",[t._v("防劫持代码")]),t._v(" "),a("li",[t._v("记录 Log，提交工信部")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("防劫持代码")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/lgwebdream/FE-Interview/issues/1056",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心 - MutationObserver 提供了监视对DOM树所做更改的能力")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" MutationObserver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MutationObserver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebKitMutationObserver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MozMutationObserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        observeMutationSupport "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MutationObserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("record")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检验 script、 iframe 源是否在白名单之中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("observeMutationSupport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutationHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            childList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            subtree"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"_6-cookie、session、token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-cookie、session、token"}},[t._v("#")]),t._v(" 6. Cookie、Session、Token")]),t._v(" "),a("p",[t._v("都是一种用户认证凭证，只是在存储、使用、有效时间上有一些差别")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Cookie")]),t._v(" "),a("ul",[a("li",[t._v("由服务器产生，发送给浏览器，浏览器把 cookie 以 key-value 的形式存在某个目录下的文本文件内，下次请求同一网站时会把该 cookie 发送给服务器")])])]),t._v(" "),a("li",[a("strong",[t._v("Session")]),t._v(" "),a("ul",[a("li",[t._v("同 Cookie，只是存储的用户的信息是临时的，用户离开网站后 session 会被销毁；这种更安全，但是应对负债均衡就很尬")])])]),t._v(" "),a("li",[a("strong",[t._v("Token")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("优势")]),t._v(" "),a("ol",[a("li",[t._v("无状态")]),t._v(" "),a("li",[t._v("安全性：可以防止 CSRF")]),t._v(" "),a("li",[t._v("可扩展：创建与其他程序共享权限的程序")]),t._v(" "),a("li",[t._v("多平台")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_7-浏览器加载一个页面的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-浏览器加载一个页面的流程"}},[t._v("#")]),t._v(" 7. 浏览器加载一个页面的流程")]),t._v(" "),a("ol",[a("li",[a("RouterLink",{attrs:{to:"/front-end/special/browser.html#_1-浏览器中的进程与线程"}},[t._v("浏览器接收 url 到开启网络请求线程")])],1),t._v(" "),a("li",[t._v("开启网络线程到发出一个完整的 http 请求（"),a("RouterLink",{attrs:{to:"/interview/network.html#_2-dns-解析的过程"}},[t._v("DNS 查询")]),t._v("、tcp/ip 、五层因特尔网络协议栈）")],1),t._v(" "),a("li",[t._v("服务器接受到请求的处理（负载均衡、安全拦截、后台处理）")]),t._v(" "),a("li",[t._v("http 交互（http 头、响应码、报文结构、cookie 及优化、gzip）")]),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/front-end/http/cache.html"}},[t._v("缓存问题")]),t._v("（强缓、协商缓存）")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/front-end/special/browser.html#_2-浏览器解析-html-的过程"}},[t._v("浏览器接受到 http 数据后的解析过程")]),t._v("（html 词法分析生成 DOM、预扫描器、CSSOM、render 树、layout、painting、复合图层合成、GPU 绘制）")],1),t._v(" "),a("li",[t._v("CSS 单独讲一下（CSS 渲染规则、"),a("RouterLink",{attrs:{to:"/front-end/css/formatting-context.html"}},[t._v("BFC、IFC")]),t._v("）")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/front-end/css/formatting-context.html"}},[t._v("JS 引擎执行过程")]),t._v("（解释阶段、预处理阶段、执行阶段、VO、作用域、回收机制-新生代老生代）")],1),t._v(" "),a("li",[t._v("其它知识模块（"),a("RouterLink",{attrs:{to:"/interview/network.html#_4-跨域问题"}},[t._v("跨域")]),t._v("、安全）")],1)]),t._v(" "),a("h2",{attrs:{id:"_8-http2-0-http3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-http2-0-http3-0"}},[t._v("#")]),t._v(" 8. "),a("RouterLink",{attrs:{to:"/front-end/http/#_7-http2-0"}},[t._v("Http2.0")]),t._v(" "),a("RouterLink",{attrs:{to:"/front-end/http/#_8-http3-0"}},[t._v("Http3.0")])],1),t._v(" "),a("h2",{attrs:{id:"_9-ajax-axios-fetch-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-ajax-axios-fetch-的区别"}},[t._v("#")]),t._v(" 9. ajax/axios/fetch 的区别")]),t._v(" "),a("ul",[a("li",[t._v("ajax 是对原生 xhr 的封装\n"),a("ul",[a("li",[t._v("是针对 MVC 的编程，不符合 MVVM 的浪潮")]),t._v(" "),a("li",[t._v("基于 xhr 的开发，xhr 架构不清晰，已经有了 fetch 的替代方案")])])]),t._v(" "),a("li",[t._v("axios 本质是也是 xhr 的封装，只不过是 Promise 的实现版本\n"),a("ul",[a("li",[t._v("node 端也可使用")]),t._v(" "),a("li",[t._v("支持 Promise API")]),t._v(" "),a("li",[t._v("客户端支防止 CSRF（每个请求都从 cookie 中拿到 key，根据浏览器的同源策略，假冒的网站是拿不到 cookie 中的 key 的）")]),t._v(" "),a("li",[t._v("支持并发请求接口")])])]),t._v(" "),a("li",[t._v("fetch 是 ajax 的替代品\n"),a("ul",[a("li",[t._v("简洁、更加语义化")]),t._v(" "),a("li",[t._v("基于 Promise 实现，支持 async/await")]),t._v(" "),a("li",[t._v("更加底层。提供的 API 更丰富（request、response）")]),t._v(" "),a("li",[t._v("脱离了 xhr，是 ES 新规范")])])])]),t._v(" "),a("h2",{attrs:{id:"_10-https-的加密过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-https-的加密过程"}},[t._v("#")]),t._v(" 10. HTTPS 的加密过程")]),t._v(" "),a("p",[t._v("HTTPS 加密过程发生在 TCP 三次握手之后")]),t._v(" "),a("ol",[a("li",[t._v("服务端请求服务器，告诉服务器自己的版本协议、支持的加密算法，并生成一个随机数（第一个）一同发送")]),t._v(" "),a("li",[t._v("Server 把配置好的公钥证书(public key certificate)（第二个） 返回给客户端")]),t._v(" "),a("li",[t._v("客户端验证公钥证书：证书是否需有效，验证中间证书、验证根证书")]),t._v(" "),a("li",[t._v("客户端使用伪随机数（第三个）生成加密所使用的的对称秘钥，然后使用公钥加密这个对称秘钥，发送给 Server")]),t._v(" "),a("li",[t._v("Server 使用自己的私钥去解密这个消息，获得第三个随机数，利用三个随机数生成最终的“对话秘钥”")]),t._v(" "),a("li",[t._v("服务器端使用对称秘钥加密“明文内容 A”，发送给客户端 ---\x3e 客户端使用对称秘钥解密秘文得到“明文内容 A”")])]),t._v(" "),a("ul",[a("li",[t._v("非对称加密得到“对话秘钥”，实际传输的数据采用这个秘钥进行对称加密")])]),t._v(" "),a("h2",{attrs:{id:"_11-进程与线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-进程与线程"}},[t._v("#")]),t._v(" 11. 进程与线程")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("进程")]),t._v("：进程是资源分配的最小单位")]),t._v(" "),a("li",[a("strong",[t._v("线程")]),t._v("：操作系统能够运算调度的最小单位")])]),t._v(" "),a("ol",[a("li",[t._v("进程需要分配一大部分的内存，线程只需要分配一部分栈就可以了")]),t._v(" "),a("li",[t._v("一个程序至少有一个进程，一个进程至少有一个线程")]),t._v(" "),a("li",[t._v("进程是资源分配的最小单位，线程是程序执行的最小单位")]),t._v(" "),a("li",[t._v("一个线程可以创建和撤销另一个线程，同一个进程中的多线程可以并发")])]),t._v(" "),a("h2",{attrs:{id:"_12-websocket、http2-与-socket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-websocket、http2-与-socket"}},[t._v("#")]),t._v(" 12. WebSocket、Http2 与 Socket")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("WebSocket 是为了解决基于浏览器的程序需要拉取资源时必须发起多个 HTTP 请求和长时间的轮训的问题……而创建的")])]),t._v(" "),a("li",[a("p",[t._v("socket 是对 TCP/IP 的封装，本质上只是一个调用接口")])]),t._v(" "),a("li",[a("p",[t._v("Websocket 与 http")]),t._v(" "),a("ul",[a("li",[t._v("相同点\n"),a("ul",[a("li",[t._v("都是基于 TCP 的应用层协议")]),t._v(" "),a("li",[t._v("都是使用 Request/Response 模型建立的链接")]),t._v(" "),a("li",[t._v("建立链接的阶段，都会返回相同的 状态码")])])]),t._v(" "),a("li",[t._v("不同点\n"),a("ul",[a("li",[t._v("WS 使用 HTTP 来建立连接，但是定义了一套新的 header")]),t._v(" "),a("li",[t._v("WS 是全双工的，")]),t._v(" "),a("li",[t._v("WS 建立连接后，数据都使用帧来传递，不再使用 request")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_13-xss-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-xss-攻击"}},[t._v("#")]),t._v(" 13. XSS 攻击")]),t._v(" "),a("ul",[a("li",[t._v("什么是 CSS 攻击\n"),a("ul",[a("li",[t._v("攻击者向页面写入他的恶意代码获取用户的敏感信息")])])]),t._v(" "),a("li",[t._v("XSS 攻击种类\n"),a("ul",[a("li",[t._v("存储型 XSS：通过漏洞将恶意代码提交到服务器数据库，用户请求时就会执行这段代码")]),t._v(" "),a("li",[t._v("反射型 XSS：放在 URL 地址的参数上")]),t._v(" "),a("li",[t._v("DOM 型 XSS：不涉及服务器，通过各种恶意手段将脚本注入到页面中")])])]),t._v(" "),a("li",[t._v("预防 XSS 攻击策略\n"),a("ul",[a("li",[t._v("用户输入永不信任：过滤用户输入的信息")]),t._v(" "),a("li",[t._v("利用 CSP（内容安全策略）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("default-sr：配置默认的\nscript-src：外部脚本\nstyle-src：样式表\nimg-src：图像\nmedia-src：媒体文件（音频和视频）\nfont-src：字体文件\nobject-src：插件（比如 Flash）\nchild-src：框架\nframe-ancestors：嵌入的外部资源（比如<frame>、<iframe>、<embed>和<applet>）\nconnect-src：HTTP 连接（通过 XHR、WebSockets、EventSource等）\nworker-src：worker脚本\nmanifest-src：manifest 文件\n")])])]),a("ul",[a("li",[t._v("cookie 设置 HTTPOnly，只能从服务器修改 cookie")])])])]),t._v(" "),a("h2",{attrs:{id:"_14-csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-csrf"}},[t._v("#")]),t._v(" 14. CSRF")]),t._v(" "),a("ul",[a("li",[t._v("什么是 CSRF\n"),a("ul",[a("li",[t._v("跨站请求伪造，原理就是攻击者构造一个后端请求，诱导用户点击或者通过钓鱼网站发起请求")])])]),t._v(" "),a("li",[t._v("如何预防\n"),a("ul",[a("li",[t._v("对于第三方站点发起的请求，可以通过设置 sameSite，禁止向第三方发送 cookie")]),t._v(" "),a("li",[t._v("验证请求来源，通过 Referer、Origin 判断来源，规避第三方请求")]),t._v(" "),a("li",[t._v("添加 CSRF-Token")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);