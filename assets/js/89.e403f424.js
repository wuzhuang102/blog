(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{340:function(t,a,s){"use strict";s.r(a);var r=s(28),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端原理-浏览器工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端原理-浏览器工作原理"}},[t._v("#")]),t._v(" 前端原理 --- 浏览器工作原理")]),t._v(" "),s("p",[s("img",{attrs:{src:"/front-end/special/browser-render.jpg",alt:""}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 浏览器工作原理"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Performance/Critical_rendering_path",target:"_blank",rel:"noopener noreferrer"}},[t._v("关键路径渲染 CRP"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"navigation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#navigation"}},[t._v("#")]),t._v(" Navigation")]),t._v(" "),s("p",[t._v("导航是加载一个页面第一步要做的事，它通常不会花费太多时间，但是等待时间和带宽会造成延迟")]),t._v(" "),s("h3",{attrs:{id:"_1-dns-查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dns-查找"}},[t._v("#")]),t._v(" 1. DNS 查找")]),t._v(" "),s("p",[t._v("对于一个web页面来说第一步是寻找页面资源的位置，第一次访问"),s("code",[t._v("https://example.com")]),t._v("时，浏览器会通过域名称进行DNS查找，得到一个IP地址，再去IP对应的服务器请求对应的fonts、images、scripts、ads 和 metrics 等资源，\n之后一段时间内相同的域名会从缓存中直接读取ip地址，而不是去进行DNS查找")]),t._v(" "),s("p",[s("em",[t._v("DNS查找对于性能来说是一个问题，特别是对于移动网络")]),t._v("。当一个用户用的是移动网络，每一个DNS查找必须从手机发送到信号塔，然后到达一个认证DNS服务器。手机、信号塔、域名服务器之间的距离可能是一个大的时间等待。")]),t._v(" "),s("h3",{attrs:{id:"_2-tcp-握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp-握手"}},[t._v("#")]),t._v(" 2. TCP 握手")]),t._v(" "),s("p",[t._v("一旦获取到服务器IP地址，浏览器就会通过TCP”三次握手“与服务器建立连接。")]),t._v(" "),s("p",[t._v("TCP的”三次握手“技术经常被称为”SYN-SYN-ACK“。通过TCP首先发送了三个消息进行协商，开始一个TCP会话在两台电脑之间。这意味着每台服务器之间还要来回发送三条消息，而请求尚未发出。")]),t._v(" "),s("h3",{attrs:{id:"_3-tls-协商"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tls-协商"}},[t._v("#")]),t._v(" 3. TLS 协商")]),t._v(" "),s("p",[t._v("为了在HTTPS上建立安全的连接，TLS协商是必须的，他决定了什么密码将会被用来加密通信，验证服务器，在真实的数据传输之前还需要三次往返数据库\n"),s("img",{attrs:{src:"/front-end/special/https-tls.jpg",alt:""}}),t._v("\n一共经过8次往返，浏览器就可以发送请求了")]),t._v(" "),s("h2",{attrs:{id:"response"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),s("h3",{attrs:{id:"_1-tcp-slow-start-14kb原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-slow-start-14kb原则"}},[t._v("#")]),t._v(" 1. TCP slow start/14kb原则")]),t._v(" "),s("p",[t._v("第一个响应包是14kb大小。这是slow start的一部分，slow start是一种均衡网络连接速度的算法。slow start逐渐增加发送数据的数量直到达到网络的最大带宽。")]),t._v(" "),s("p",[t._v('在"TCP slow start"中，在收到初始包之后, 服务器会将下一个包的大小加倍到大约28kb。 后续的包依次是前一个包大小的二倍直到达到预定的阈值，或者遇到拥塞。\n'),s("img",{attrs:{src:"/front-end/special/slow-start.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-拥塞控制"}},[t._v("#")]),t._v(" 2. 拥塞控制")]),t._v(" "),s("p",[t._v("当服务器用TCP包来发送数据时，客户端通过返回确认帧来确认传输。由于硬件和网络条件，连接的容量是有限的。 如果服务器太快地发送太多的包，它们可能会被丢弃。意味着，将不会有确认帧的返回。服务器把它们当做确认帧丢失。拥塞控制算法使用这个发送包和确认帧流来确定发送速率。")]),t._v(" "),s("h2",{attrs:{id:"parsing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parsing"}},[t._v("#")]),t._v(" Parsing")]),t._v(" "),s("p",[t._v("一旦浏览器接收到数据的第一块，他就开始解析收到的信息。“解析”是浏览器将通过网络接收的数据转换为DOM和CSSOM的步骤，通过渲染器把DOM和CSSOM在屏幕上绘制成页面。")]),t._v(" "),s("p",[s("em",[t._v("即使请求页面的HTML大于14kb的数据包，浏览器也将开始解析并尝试根据其拥有的数据进行渲染")]),t._v("，所以尽量在前14kb包含浏览器开始渲染页面所需要的所有内容，\n或者至少包含页面模板")]),t._v(" "),s("h3",{attrs:{id:"_1-构建dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建dom树"}},[t._v("#")]),t._v(" 1. 构建DOM树")]),t._v(" "),s("p",[s("strong",[t._v("第一步")]),t._v("是处理HTML并构造DOM树。")]),t._v(" "),s("p",[t._v("当解析器发现非阻塞资源，例如一张图片，浏览器会请求这些资源并且继续解析。当遇到一个CSS文件时，解析也可以继续进行，但是对于<script>标签（特别是没有 async 或者 defer 属性）会阻塞渲染并停止HTML的解析。尽管浏览器的预加载扫描器加速了这个过程，但过多的脚本仍然是一个重要的瓶颈。")]),t._v(" "),s("h3",{attrs:{id:"_2-预加载扫描器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-预加载扫描器"}},[t._v("#")]),t._v(" 2. 预加载扫描器")]),t._v(" "),s("p",[t._v("浏览器构建DOM树时，这个过程占用了主线程。当这种情况发生时，"),s("em",[t._v("预加载扫描仪将解析可用的内容并请求高优先级资源")]),t._v("，如CSS、JavaScript和web字体。我们不必等到解析器找到对外部资源的引用来请求它。它将在后台检索资源，以便在主HTML解析器到达请求的资源时，它们可能已经在运行，或者已经被下载。预加载扫描仪提供的优化减少了阻塞")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("styles.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myscript.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myimage.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("alt")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("image description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("anotherscript.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("当主线程在解析HTML和CSS时，预加载扫描器将找到脚本和图像，并开始下载它们。为了确保脚本不会阻塞进程，当JavaScript解析和执行顺序不重要时，可以添加async属性或defer属性。")]),t._v(" "),s("p",[t._v("等待获取CSS不会阻塞HTML的解析或者下载，但是它的确阻塞JavaScript，因为JavaScript经常用于查询元素的CSS属性。")]),t._v(" "),s("h3",{attrs:{id:"_3-构建-cssom-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-构建-cssom-树"}},[t._v("#")]),t._v(" 3. 构建 CSSOM 树")]),t._v(" "),s("p",[s("strong",[t._v("第二步")]),t._v("处理CSS并构建CSSOM。浏览器将CSS转换成可以理解和使用的样式映射。浏览器便利CSS中的每个规则集，根据CSS选择器创建具有父、子和兄弟关系的节点树")]),t._v(" "),s("p",[t._v("构建CSSOM非常非常快。创建CSSOM的总时间通常小于一次DNS查找所需的时间。")]),t._v(" "),s("h3",{attrs:{id:"_4-javascript编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-javascript编译"}},[t._v("#")]),t._v(" 4. JavaScript编译")]),t._v(" "),s("p",[t._v("当CSS被解析并创建CSSOM时，其他资源，包括JavaScript文件正在下载（多亏了preload scanner）。JavaScript被解释、编译、解析和执行。脚本被解析为抽象语法树。一些浏览器引擎使用”Abstract Syntax Tree“并将其传递到解释器中，输出在主线程上执行的字节码。这就是所谓的JavaScript编译。")]),t._v(" "),s("h3",{attrs:{id:"_5-构建辅助功能树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-构建辅助功能树"}},[t._v("#")]),t._v(" 5. 构建辅助功能树")]),t._v(" "),s("p",[t._v("浏览器还构建辅助设备用于分析和解释内容的辅助功能（accessibility ）树。可访问性对象模型（AOM）类似于DOM的语义版本。当DOM更新时，浏览器会更新辅助功能树。辅助技术本身无法修改可访问性树。")]),t._v(" "),s("h2",{attrs:{id:"render"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" Render")]),t._v(" "),s("p",[t._v("渲染步骤包括样式、布局、绘制，在某些情况下还包括合成。在解析步骤中创建的CSSOM树和DOM树组合成一个Render树，然后用于计算每个可见元素的布局，然后将其绘制到屏幕上。在某些情况下，可以将内容提升到它们自己的层并进行合成，通过在GPU而不是CPU上绘制屏幕的一部分来提高性能，从而释放主线程。")]),t._v(" "),s("h3",{attrs:{id:"_1-style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-style"}},[t._v("#")]),t._v(" 1. Style")]),t._v(" "),s("p",[s("strong",[t._v("第三步")]),t._v("将 DOM 和 CSSOM 合成一个render树，计算样式树或渲染树从 DOM 树的根开始构建，遍历每个可见节点")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ol",[s("li",[t._v("<head>及其子节点以及任何具有 display: none样式样式的节点，这些标签将不会显示，也就是它们不会出现在Render树上。")]),t._v(" "),s("li",[t._v("具有visibility: hidden的节点会出现在Render树上，因为它们会占用空间。")])])]),t._v(" "),s("p",[t._v("每个可见节点都应用了其CSSOM规则。Render树保存所有具有内容和计算样式的可见节点——将所有相关样式匹配到DOM树中的每个可见节点，并根据CSS级联确定每个节点的计算样式。")]),t._v(" "),s("h3",{attrs:{id:"_2-layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-layout"}},[t._v("#")]),t._v(" 2. Layout")]),t._v(" "),s("p",[s("strong",[t._v("第四步")]),t._v("是在渲染树上运行布局以计算每个节点的布局。布局是确定呈现树中所有节点的宽度、高度和位置，以及确定页面上每个对象和位置的过程。")]),t._v(" "),s("p",[t._v("第一次确定节点的大小和位置称为布局。随后对节点大小和位置的重新计算称为重排。")]),t._v(" "),s("h3",{attrs:{id:"_3-paint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-paint"}},[t._v("#")]),t._v(" 3. Paint")]),t._v(" "),s("p",[s("strong",[t._v("最后一步")]),t._v("将各个节点绘制到屏幕上。在绘制或光栅化阶段，浏览器将在布局阶段计算的每个框转换为屏幕上的实际像素。")]),t._v(" "),s("p",[t._v("为了确保平滑滚动和动画，占据主线程的所有内容，包括计算样式，以及回流和绘制，必须让浏览器在16.67毫秒内完成")]),t._v(" "),s("p",[t._v("绘制可以将布局树中的元素分解为多个层。将内容提升到GPU层可以提高绘制和重新绘制的性能。 有一些特定的属性和元素可以实例化一个层，包括<video>、<canvas> 以及 "),s("a",{attrs:{href:"/front-end/css/stack"}},[t._v("层叠上下文")]),t._v("元素，")]),t._v(" "),s("p",[s("em",[t._v("层确实可以提高性能，但是它以内存管理为代价，因此不应作为web性能优化策略的一部分过度使用。")])]),t._v(" "),s("h3",{attrs:{id:"_4-compositing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-compositing"}},[t._v("#")]),t._v(" 4. Compositing")]),t._v(" "),s("p",[t._v("当文档的各个部分以不同的层绘制，相互重叠时，必须进行合成，以确保它们以正确的顺序绘制到屏幕上，并正确显示内容。")]),t._v(" "),s("h2",{attrs:{id:"interactivity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interactivity"}},[t._v("#")]),t._v(" Interactivity")]),t._v(" "),s("p",[t._v("一旦主线程绘制页面完成，你会认为我们已经“准备好了”，但事实并非如此。如果加载包含JavaScript（并且延迟到onload事件激发后执行），则主线程可能很忙，无法用于滚动、触摸和其他交互。")]),t._v(" "),s("p",[t._v("Time to Interactive(TTI)是测量第一个请求导致DNS查找和SSL连接到页面可交互时所用的时间--- 可交互“First Contentful Paint”之后的时间点")])])}),[],!1,null,null,null);a.default=e.exports}}]);