(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{404:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"php-基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php-基本语法"}},[t._v("#")]),t._v(" PHP 基本语法")]),t._v(" "),a("h2",{attrs:{id:"_1-基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本语法"}},[t._v("#")]),t._v(" 1. 基本语法")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// php代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量"}},[t._v("#")]),t._v(" 2. 变量")]),t._v(" "),a("ul",[a("li",[t._v("变量以 $ 符号开始，后面跟着变量的名称")]),t._v(" "),a("li",[t._v("php是若类型语言， 不必向 php 声明该变量的数据类型")]),t._v(" "),a("li",[t._v("php作用域\n"),a("ul",[a("li",[t._v("local")]),t._v(" "),a("li",[t._v("global\n"),a("ul",[a("li",[t._v("除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字")]),t._v(" "),a("li",[t._v("PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称")])])]),t._v(" "),a("li",[t._v("static\n"),a("ul",[a("li",[t._v("他可以在函数执行完毕时保证局部变量不被删除")]),t._v(" "),a("li",[t._v("每次调用该函数时，该变量将会保留着函数前一次被调用时的值。")])])]),t._v(" "),a("li",[t._v("paramter")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-输出语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-输出语句"}},[t._v("#")]),t._v(" 3. 输出语句")]),t._v(" "),a("p",[t._v("echo")]),t._v(" "),a("ul",[a("li",[t._v("echo可以输出多个字符串")]),t._v(" "),a("li",[t._v("echo 输出的速度比 print 快")])]),t._v(" "),a("p",[t._v("print")]),t._v(" "),a("ul",[a("li",[t._v("print 只能输出一个字符串")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$car")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'car'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"这是一个"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"字符串，"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"使用了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"多个"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"参数。"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"我车的品牌是 '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"我车的品牌是 '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据类型"}},[t._v("#")]),t._v(" 4. 数据类型")]),t._v(" "),a("ul",[a("li",[t._v("String\n"),a("ul",[a("li",[t._v("并置运算符：使用 "),a("code",[t._v(".")]),t._v(" 连接两个字符串")]),t._v(" "),a("li",[t._v("strlen()函数：获取字符串长度")]),t._v(" "),a("li",[t._v("strpos($str,$query_str)函数：查找一个字符或一段指定的文本，找到就返回第一个字符的位置，反之返回false.")])])]),t._v(" "),a("li",[t._v("Integer")]),t._v(" "),a("li",[t._v("Float")]),t._v(" "),a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("Array\n"),a("ul",[a("li",[t._v("count() 函数： 获取数组长度")]),t._v(" "),a("li",[t._v("sort() - 对数组进行升序排列")]),t._v(" "),a("li",[t._v("rsort() - 对数组进行降序排列")]),t._v(" "),a("li",[t._v("ksort() - 根据关联数组的键，对数组进行升序排列")]),t._v(" "),a("li",[t._v("krsort() - 根据关联数组的键，对数组进行降序排列")]),t._v(" "),a("li",[t._v("asort() - 根据关联数组的值，对数组进行升序排列")]),t._v(" "),a("li",[t._v("arsort() - 根据关联数组的值，对数组进行降序排列")])])]),t._v(" "),a("li",[t._v("Object\n"),a("ul",[a("li",[t._v("你必须使用class关键字声明类对象。类是可以包含属性和方法的结构。")])])]),t._v(" "),a("li",[t._v("NULL")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$txt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cars")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'bench'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'bmw'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'byd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__construct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("what_color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组遍历")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Peter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"35"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Ben"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"37"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Joe"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"43"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$x_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"Key="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('", Value="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$x_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"<br>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-类型比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-类型比较"}},[t._v("#")]),t._v(" 5. 类型比较")]),t._v(" "),a("ul",[a("li",[t._v("松散比较：使用两个等号 "),a("code",[t._v("==")]),t._v(" 比较，只比较值，不比较类型。")]),t._v(" "),a("li",[t._v("严格比较：用三个等号 "),a("code",[t._v("===")]),t._v(" 比较，除了比较值，也比较类型")])]),t._v(" "),a("h2",{attrs:{id:"_6-常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-常量"}},[t._v("#")]),t._v(" 6. 常量")]),t._v(" "),a("p",[t._v("define ( string $name , mixed $value [, bool $case_insensitive = false ] )")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("name")]),t._v("：必选参数，常量名称，即标志符。")]),t._v(" "),a("li",[a("strong",[t._v("value")]),t._v("：必选参数，常量的值。")]),t._v(" "),a("li",[a("strong",[t._v("case_insensitive")]),t._v("：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。")])]),t._v(" "),a("p",[t._v("常量是全局的")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 区分大小写的常量名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"GREETING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"欢迎访问 Runoob.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不区分大小写的常量名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"GREETING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"欢迎访问 Runoob.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),a("h2",{attrs:{id:"_7-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-运算符"}},[t._v("#")]),t._v(" 7. 运算符")]),t._v(" "),a("h3",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x<>y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不等于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("a and b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("都为true，fanhuitrue")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("a && b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("a or b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("或")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("有一个为true,返回true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("a ｜｜ b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("或")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("a xor b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("异或")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("有且仅有一个为true，返回true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h3",{attrs:{id:"数组运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组运算符"}},[t._v("#")]),t._v(" 数组运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x + y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("集合")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("x与y的集合")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x == y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("相等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 x 和 y 具有相同的键/值对，则返回 true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x === y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("恒等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x != y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不相等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x <> y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不相等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("x !== y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不恒等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h3",{attrs:{id:"三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),a("p",[t._v("(expr1) ? (expr2) : (expr3)")]),t._v(" "),a("h3",{attrs:{id:"组合比较符-php7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合比较符-php7"}},[t._v("#")]),t._v(" 组合比较符(php7+)")]),t._v(" "),a("p",[t._v("$c = $a <=> $b;")]),t._v(" "),a("ul",[a("li",[t._v("如果 $a > $b, 则 $c 的值为 1。")]),t._v(" "),a("li",[t._v("如果 $a == $b, 则 $c 的值为 0。")]),t._v(" "),a("li",[t._v("如果 $a < $b, 则 $c 的值为 -1。")])]),t._v(" "),a("h3",{attrs:{id:"运算符优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),a("p",[t._v("自己查。。。")]),t._v(" "),a("h2",{attrs:{id:"_8-条件语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-条件语句"}},[t._v("#")]),t._v(" 8. 条件语句")]),t._v(" "),a("h3",{attrs:{id:"if-elseif-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-elseif-else"}},[t._v("#")]),t._v(" if...elseif...else")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 条件成立时执行的代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" 条件成立时执行的代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    条件不成立时执行的代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"switch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[t._v("#")]),t._v(" switch")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$favcolor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$favcolor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"你喜欢的颜色是红色!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"你喜欢的颜色不是 红色!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-超级全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-超级全局变量"}},[t._v("#")]),t._v(" 9. 超级全局变量")]),t._v(" "),a("ul",[a("li",[t._v("$GLOBALS\n"),a("ul",[a("li",[t._v("$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键")])])]),t._v(" "),a("li",[t._v("$_SERVER\n"),a("ul",[a("li",[t._v("是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组")])])]),t._v(" "),a("li",[t._v("$_REQUEST\n"),a("ul",[a("li",[t._v("收集HTML表单提交的数据")])])]),t._v(" "),a("li",[t._v("$_POST\n"),a("ul",[a("li",[t._v("收集post表单数据")])])]),t._v(" "),a("li",[t._v("$_GET\n"),a("ul",[a("li",[t._v("收集get表单数据")])])]),t._v(" "),a("li",[t._v("$_FILES")]),t._v(" "),a("li",[t._v("$_ENV")]),t._v(" "),a("li",[t._v("$_COOKIE")]),t._v(" "),a("li",[t._v("$_SESSION")])]),t._v(" "),a("h3",{attrs:{id:"_10-魔术常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-魔术常量"}},[t._v("#")]),t._v(" 10. 魔术常量")]),t._v(" "),a("ul",[a("li",[t._v("__LINE__ : 显示当前行号")]),t._v(" "),a("li",[t._v("__FILE__: 文件绝对路径")]),t._v(" "),a("li",[t._v("__DIR__: 文件所在的目录")]),t._v(" "),a("li",[t._v("__FUNCTION__: 函数名称")]),t._v(" "),a("li",[t._v("__TRAIT__:")]),t._v(" "),a("li",[t._v("__NAMESPACE__: 类的命名空间")])]),t._v(" "),a("h3",{attrs:{id:"_11-命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-命名空间"}},[t._v("#")]),t._v(" 11. 命名空间")])])}),[],!1,null,null,null);s.default=n.exports}}]);