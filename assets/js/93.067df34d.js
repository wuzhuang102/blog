(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{343:function(t,a,s){"use strict";s.r(a);var r=s(28),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-基础篇-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-基础篇-1"}},[t._v("#")]),t._v(" JS 基础篇 1")]),t._v(" "),s("h2",{attrs:{id:"_1-调用栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-调用栈"}},[t._v("#")]),t._v(" 1. 调用栈")]),t._v(" "),s("p",[s("a",{attrs:{href:"/front-end/javascript/principle/execution"}},[t._v("JS 执行堆栈")])]),t._v(" "),s("p",[t._v("调用栈是解释器追踪函数执行流的一种机制。当执行环境中调用了多个函数时，通过这种机制，我们能追踪到哪个函数正在执行，执行的函数体中又调用了哪个函数。")]),t._v(" "),s("ul",[s("li",[t._v("每调用一个函数，解释器就会把该函数添加进调用栈并开始运行。")]),t._v(" "),s("li",[t._v("正在调用栈中执行的函数还调用了其它函数，那么新函数也将会被添加进调用栈，一旦这个函数被调用，便会立即执行。")]),t._v(" "),s("li",[t._v("当前函数执行完毕后，解释器将其清除出调用栈，继续执行当前执行环境下的剩余代码。")]),t._v(" "),s("li",[t._v("当分配的调用栈空间被占满时，会引发“堆栈溢出”错误")])]),t._v(" "),s("h2",{attrs:{id:"_4-隐式、显式、名义与鸭子类型，宽松等于"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-隐式、显式、名义与鸭子类型，宽松等于"}},[t._v("#")]),t._v(" 4. "),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept2.html#_5-类型转换"}},[t._v("隐式、显式、名义与鸭子类型，宽松等于==")])],1),t._v(" "),s("h2",{attrs:{id:"_5-typeof-与-instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-typeof-与-instanceof"}},[t._v("#")]),t._v(" 5. typeof 与 instanceof")]),t._v(" "),s("ul",[s("li",[t._v("typeof 返回类型的字符串形式\n"),s("ul",[s("li",[t._v("原始类型：除 "),s("code",[t._v("null")]),t._v(" 外，都是正常类型， "),s("code",[t._v("typeof null === 'object'")])]),t._v(" "),s("li",[t._v("对象：除了函数都是 "),s("code",[t._v("object")])])])]),t._v(" "),s("li",[t._v("instanceof 判断 A 是否为 B 的实例（检测构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性是否出现在某个实例对象的原型链上）"),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("typeof 的唯一使用场景就是判断一个对象是否已经定义或者被赋值")])])])]),t._v(" "),s("h2",{attrs:{id:"_6-this，call、apply、bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-this，call、apply、bind"}},[t._v("#")]),t._v(" 6. "),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept2.html#_2-this"}},[t._v("this")]),t._v("，call、apply、bind")],1),t._v(" "),s("ul",[s("li",[t._v("call 参数是一个一个的传 "),s("code",[t._v("call(obj, param1, param2,...)")])]),t._v(" "),s("li",[t._v("apply 参数是一个数组 "),s("code",[t._v("apply(obj, [param1, param2, ...])")])]),t._v(" "),s("li",[t._v("bind 绑定 this 后返回一个新函数 "),s("code",[t._v("bind(obj, param1, param2,...)")]),t._v("，前两个都是立即执行的")])]),t._v(" "),s("h2",{attrs:{id:"_7-函数作用域、块级作用域、词法作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-函数作用域、块级作用域、词法作用域"}},[t._v("#")]),t._v(" 7. 函数作用域、块级作用域、词法作用域")]),t._v(" "),s("p",[t._v("作用域是程序源代码中定义变量的区域，是根据变量名称查找变量的一套规则。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("词法作用域")]),t._v(" "),s("ul",[s("li",[t._v("规则\n"),s("ul",[s("li",[t._v("函数允许访问函数外部的数据")]),t._v(" "),s("li",[t._v("整个代码结构中只有函数可以限定作用域")]),t._v(" "),s("li",[t._v("作用规则首先使用提升规则分析")]),t._v(" "),s("li",[t._v("如果当前作用域中有了名字了，就不考虑外面的名字")])])]),t._v(" "),s("li",[t._v("欺骗词法\n"),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/book/code/you_dont_know_javascript_1.html#_2-2-欺骗词法"}},[t._v("eval")]),t._v("、"),s("RouterLink",{attrs:{to:"/book/code/you_dont_know_javascript_1.html#_2-2-欺骗词法"}},[t._v("with")])],1)])])])]),t._v(" "),s("li",[s("strong",[s("RouterLink",{attrs:{to:"/book/code/you_dont_know_javascript_1.html#_3-1-函数中的作用域"}},[t._v("函数作用域")])],1),t._v(" "),s("ul",[s("li",[t._v("定义\n"),s("ul",[s("li",[t._v("属于这个函数的全部变量都可以在整个函数的范围内使用及复 用(事实上在嵌套的作用域中也可以使用)")])])]),t._v(" "),s("li",[t._v("使用场景\n"),s("ul",[s("li",[t._v("规避冲突")]),t._v(" "),s("li",[t._v("全局空间命名")]),t._v(" "),s("li",[t._v("模块管理")])])]),t._v(" "),s("li",[t._v("立即执行函数："),s("code",[t._v("(function foo(){..})()")]),t._v("、"),s("code",[t._v("(function foo(){..}())")])])])]),t._v(" "),s("li",[s("strong",[s("RouterLink",{attrs:{to:"/book/code/you_dont_know_javascript_1.html#_3-4-块作用域"}},[t._v("块级作用域")])],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("{ }")]),t._v(" 内的每一段代码都具有各自的作用域，而且变量在声明他们的代码段之外是不可见的。")]),t._v(" "),s("li",[t._v("创建块级作用域的场景\n"),s("ul",[s("li",[t._v("with")]),t._v(" "),s("li",[t._v("try/catch")]),t._v(" "),s("li",[t._v("let/const")])])])])])]),t._v(" "),s("h2",{attrs:{id:"_8-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-闭包"}},[t._v("#")]),t._v(" 8. 闭包")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("闭包")]),t._v("：内部函数可以访问其所在的外部函数中声明的参数和变量（然后从执行上下文、VO、AO 的角度去解释它）")]),t._v(" "),s("li",[t._v("闭包的作用\n"),s("ul",[s("li",[t._v("模仿块级作用域")]),t._v(" "),s("li",[t._v("存储变量")]),t._v(" "),s("li",[t._v("封装私有变量")])])])]),t._v(" "),s("h2",{attrs:{id:"_10-表达式和语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-表达式和语句"}},[t._v("#")]),t._v(" 10. "),s("a",{attrs:{href:"https://ld246.com/article/1547453774159",target:"_blank",rel:"noopener noreferrer"}},[t._v("表达式和语句"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("表达式：产生一个值")]),t._v(" "),s("li",[t._v("语句：执行一个操作")])]),t._v(" "),s("h2",{attrs:{id:"_11-变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-变量提升"}},[t._v("#")]),t._v(" 11. "),s("RouterLink",{attrs:{to:"/front-end/javascript/principle/execution.html#_1-3-执行上下文的创建"}},[t._v("变量提升")])],1),t._v(" "),s("h2",{attrs:{id:"_12-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-promise"}},[t._v("#")]),t._v(" 12. "),s("RouterLink",{attrs:{to:"/interview/js-code.html#_4-promise"}},[t._v("Promise")])],1),t._v(" "),s("h3",{attrs:{id:"_12-1-promise-的第二个参数和-catch-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-promise-的第二个参数和-catch-有什么区别"}},[t._v("#")]),t._v(" 12.1 Promise 的第二个参数和 catch 有什么区别")]),t._v(" "),s("ul",[s("li",[t._v("then 中抛出的异常，Promise 的第二个参数捕获不到，catch能捕获")])]),t._v(" "),s("h2",{attrs:{id:"_13-立即执行函数、模块化、命名空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-立即执行函数、模块化、命名空间"}},[t._v("#")]),t._v(" 13. 立即执行函数、模块化、命名空间")]),t._v(" "),s("ul",[s("li",[t._v("立即执行函数："),s("code",[t._v("(function foo(){..})()")]),t._v("、"),s("code",[t._v("(function foo(){..}())")])])]),t._v(" "),s("h2",{attrs:{id:"_19-继承、多态和代码复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-继承、多态和代码复用"}},[t._v("#")]),t._v(" 19. 继承、多态和代码复用")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("封装")]),t._v(" "),s("ul",[s("li",[t._v("定义：隐藏实现细节、设计细节，使得对象内部的变化对其它对象而言是不可见的，对象之间只能同归暴露的 API 接口来通信")])])]),t._v(" "),s("li",[s("strong",[t._v("继承")]),t._v(" "),s("ul",[s("li",[t._v("定义：可以让某个类型的对象获得另一个类型对象的属性和方法")]),t._v(" "),s("li",[t._v("JS 中实现继承的方式\n"),s("ol",[s("li",[t._v("构造函数绑定：使用 call 或者 apply 方法将父对象的构造函数绑定在子对象上")]),t._v(" "),s("li",[t._v("原型继承：")]),t._v(" "),s("li",[t._v("组合继承：使用原型链对原型属性和方法的继承，通过构造函数实现对实例属性的继承")])])])])]),t._v(" "),s("li",[s("strong",[t._v("多态")]),t._v(" "),s("ul",[s("li",[t._v("定义：同一操作作用于不同的对象上面，可以产生不同的解释和不同的执行结果")]),t._v(" "),s("li",[t._v("作用：通过把过程化的条件分支语句转化为对象的多态性，从而消除这些条件分支语句")])])])]),t._v(" "),s("h2",{attrs:{id:"_20-按位操作符，类型化数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-按位操作符，类型化数组"}},[t._v("#")]),t._v(" 20. "),s("a",{attrs:{href:"/wiki/base/bit-operation"}},[t._v("按位操作符")]),t._v("，"),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept.html#_3-类型化数组"}},[t._v("类型化数组")])],1),t._v(" "),s("h2",{attrs:{id:"_22-new-一个函数发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-new-一个函数发生了什么"}},[t._v("#")]),t._v(" 22. "),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept2.html#_4-new-操作符"}},[t._v("new 一个函数发生了什么")])],1),t._v(" "),s("h2",{attrs:{id:"_23-原型继承、原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-原型继承、原型链"}},[t._v("#")]),t._v(" 23. "),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept2.html#_1-原型与原型链"}},[t._v("原型继承、原型链")])],1),t._v(" "),s("h2",{attrs:{id:"_24-object-create，object-assign"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-object-create，object-assign"}},[t._v("#")]),t._v(" 24. "),s("RouterLink",{attrs:{to:"/front-end/javascript/base/concept.html#_4-object包含的方法"}},[t._v("Object.create，Object.assign")])],1),t._v(" "),s("h2",{attrs:{id:"_25-工厂函数和类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-工厂函数和类"}},[t._v("#")]),t._v(" 25. 工厂函数和类")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("工厂函数")]),t._v(" "),s("ul",[s("li",[t._v("定义： 指这些内建函数都是类对象，当你调用他们时，实际上是创建了一个类实例。")])])])]),t._v(" "),s("h2",{attrs:{id:"_26-设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-设计模式"}},[t._v("#")]),t._v(" 26. "),s("RouterLink",{attrs:{to:"/wiki/base/design.html"}},[t._v("设计模式")])],1),t._v(" "),s("h2",{attrs:{id:"_27-memoization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-memoization"}},[t._v("#")]),t._v(" 27. Memoization")]),t._v(" "),s("p",[t._v("一种优化技术，存储昂贵的函数调用的结果来加速计算机程序，并在再次发生相同的输入时返回缓存的结果。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("underscore 中的 memoize 函数")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("memoize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hasher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("memoize")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" memoize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    memoize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" memoize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("br"),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("img",{staticClass:"zoom-img",attrs:{src:"/interview/js-base.png"}})])}),[],!1,null,null,null);a.default=n.exports}}]);